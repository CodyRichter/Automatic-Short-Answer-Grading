{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BERT_baseline","provenance":[{"file_id":"1T2LgFFGZRZBqayVUMORqqPcVrwl2tJVB","timestamp":1649802243738}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Project Dataset Loading"],"metadata":{"id":"0UnfUwvwN5W6"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"_tL-P3q4MaeG"},"outputs":[],"source":["import zipfile\n","import numpy as np\n","import os"]},{"cell_type":"code","source":["# This is a direct-download version of the Kaggle dataset found at: https://www.kaggle.com/competitions/asap-sas/data\n","!wget 'https://drive.google.com/uc?export=download&id=1evWxj4M33SfSaw4nCXA8m71v9w8Zf1k2' -O dataset.zip\n","\n","# Extract the dataset files to the \"dataset\" folder\n","with zipfile.ZipFile('dataset.zip', 'r') as zip_ref:\n","    zip_ref.extractall('.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dQKdp7p4_ZUg","executionInfo":{"status":"ok","timestamp":1649810561380,"user_tz":240,"elapsed":16461,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"a55882fe-1a5a-43bc-afcb-b0c7f43a0baf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-04-13 00:42:24--  https://drive.google.com/uc?export=download&id=1evWxj4M33SfSaw4nCXA8m71v9w8Zf1k2\n","Resolving drive.google.com (drive.google.com)... 108.177.120.138, 108.177.120.113, 108.177.120.100, ...\n","Connecting to drive.google.com (drive.google.com)|108.177.120.138|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0o-24-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/u9i330dkhe6305opnde3pdc63ade3rut/1649810550000/09634012588375902450/*/1evWxj4M33SfSaw4nCXA8m71v9w8Zf1k2?e=download [following]\n","Warning: wildcards not supported in HTTP.\n","--2022-04-13 00:42:39--  https://doc-0o-24-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/u9i330dkhe6305opnde3pdc63ade3rut/1649810550000/09634012588375902450/*/1evWxj4M33SfSaw4nCXA8m71v9w8Zf1k2?e=download\n","Resolving doc-0o-24-docs.googleusercontent.com (doc-0o-24-docs.googleusercontent.com)... 142.250.136.132, 2607:f8b0:4001:c34::84\n","Connecting to doc-0o-24-docs.googleusercontent.com (doc-0o-24-docs.googleusercontent.com)|142.250.136.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 25035498 (24M) [application/zip]\n","Saving to: ‘dataset.zip’\n","\n","dataset.zip         100%[===================>]  23.88M  98.8MB/s    in 0.2s    \n","\n","2022-04-13 00:42:40 (98.8 MB/s) - ‘dataset.zip’ saved [25035498/25035498]\n","\n"]}]},{"cell_type":"code","source":["training_data_file_name = 'dataset/train.tsv'\n","test_data_texts_file_name = 'dataset/public_leaderboard_rel_2.tsv'\n","test_data_scores_file_name = 'dataset/public_leaderboard_solution.csv'"],"metadata":{"id":"wg4HJSXW_ZXZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["training_data_tsv = np.genfromtxt(fname=training_data_file_name, delimiter=\"\\t\", skip_header=1, dtype='str')\n","\n","training_data_texts = training_data_tsv[:,4]\n","training_data_essay_set = training_data_tsv[:,1].astype('int64')\n","training_data_scores = np.minimum(training_data_tsv[:,2].astype('int64'), training_data_tsv[:,3].astype('int64'))\n","\n","print('Training Data Texts', training_data_texts.shape)\n","print('Training Data Scores', training_data_scores.shape)\n","\n","test_data_texts_file = np.genfromtxt(fname=test_data_texts_file_name, delimiter=\"\\t\", skip_header=1, dtype='str')\n","test_data_scores_file = np.genfromtxt(fname=test_data_scores_file_name, delimiter=\",\", skip_header=1)\n","\n","test_data_texts = test_data_texts_file[:,2]\n","test_data_essay_set = test_data_scores_file[:,1]\n","test_data_scores = test_data_scores_file[:,3]\n","\n","print('Test Data Texts', test_data_texts.shape)\n","print('Test Data Scores', test_data_scores.shape)\n","\n","\n","train_matrix = np.column_stack((training_data_texts, training_data_essay_set.astype('str'), training_data_scores.astype('str')))\n","test_matrix = np.column_stack((test_data_texts, test_data_essay_set.astype('str'), test_data_scores.astype('str')))\n","\n","try:\n","    os.remove('train.tsv')\n","except OSError:\n","    pass\n","\n","try:\n","    os.remove('test.tsv')\n","except OSError:\n","    pass\n","\n","np.savetxt('train.tsv', train_matrix, delimiter='\\t', fmt='%s', header='text\\tessay_set\\tscore')\n","np.savetxt('test.tsv', test_matrix, delimiter='\\t', fmt='%s', header='text\\tessay_set\\tscore')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T3Cpw_yM_ZaB","executionInfo":{"status":"ok","timestamp":1649810569280,"user_tz":240,"elapsed":2776,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"1c5ef4f5-36cb-4c0a-9ca1-ee2fb27d9a42"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Data Texts (17207,)\n","Training Data Scores (17207,)\n","Test Data Texts (5224,)\n","Test Data Scores (5224,)\n"]}]},{"cell_type":"code","source":["from torchtext.legacy import data\n","from torchtext.legacy import datasets\n","\n","TEXT = data.Field()\n","ESSAY_SET = data.Field()\n","SCORE = data.Field()\n","\n","train, test = data.TabularDataset.splits(\n","    path='./', train='train.tsv', test='test.tsv', format='tsv',\n","    fields=[('text', TEXT),('essay_set', TEXT), ('score', SCORE)], \n",")"],"metadata":{"id":"GE1wyg4kAUwB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_iter, test_iter = data.BucketIterator.splits(\n","    (train, test), batch_sizes=(16, 256),\n","    sort_key=lambda x: len(x.text), device=0)\n","\n","TEXT.build_vocab(train)\n","SCORE.build_vocab(train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MHkQGLsLEalY","executionInfo":{"status":"ok","timestamp":1649810589233,"user_tz":240,"elapsed":452,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"ea0c17bc-af0b-47d5-80a1-43023b9b5bca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["The `device` argument should be set by using `torch.device` or passing a string as an argument. This behavior will be deprecated soon and currently defaults to cpu.\n","The `device` argument should be set by using `torch.device` or passing a string as an argument. This behavior will be deprecated soon and currently defaults to cpu.\n"]}]},{"cell_type":"markdown","source":["# Finding sentence embeddings with BERT\n","\n","---\n","Documentation: https://www.sbert.net/"],"metadata":{"id":"1FAC8fve41ZH"}},{"cell_type":"code","source":["!pip install -U sentence-transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8gg15gsi480K","executionInfo":{"status":"ok","timestamp":1649807324757,"user_tz":240,"elapsed":12688,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"cb2e9b8f-7bcd-4e28-c9b8-e3bd593b578c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting sentence-transformers\n","  Downloading sentence-transformers-2.2.0.tar.gz (79 kB)\n","\u001b[K     |████████████████████████████████| 79 kB 3.8 MB/s \n","\u001b[?25hCollecting transformers<5.0.0,>=4.6.0\n","  Downloading transformers-4.18.0-py3-none-any.whl (4.0 MB)\n","\u001b[K     |████████████████████████████████| 4.0 MB 11.6 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (4.63.0)\n","Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.10.0+cu111)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (0.11.1+cu111)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.21.5)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.0.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (1.4.1)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from sentence-transformers) (3.2.5)\n","Collecting sentencepiece\n","  Downloading sentencepiece-0.1.96-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\n","\u001b[K     |████████████████████████████████| 1.2 MB 30.9 MB/s \n","\u001b[?25hCollecting huggingface-hub\n","  Downloading huggingface_hub-0.5.1-py3-none-any.whl (77 kB)\n","\u001b[K     |████████████████████████████████| 77 kB 5.4 MB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6.0->sentence-transformers) (3.10.0.2)\n","Collecting pyyaml>=5.1\n","  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n","\u001b[K     |████████████████████████████████| 596 kB 30.8 MB/s \n","\u001b[?25hRequirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers) (2019.12.20)\n","Collecting tokenizers!=0.11.3,<0.13,>=0.11.1\n","  Downloading tokenizers-0.11.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (6.5 MB)\n","\u001b[K     |████████████████████████████████| 6.5 MB 38.3 MB/s \n","\u001b[?25hRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers) (21.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers) (3.6.0)\n","Collecting sacremoses\n","  Downloading sacremoses-0.0.49-py3-none-any.whl (895 kB)\n","\u001b[K     |████████████████████████████████| 895 kB 45.3 MB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers) (2.23.0)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers) (4.11.3)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers<5.0.0,>=4.6.0->sentence-transformers) (3.0.7)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers<5.0.0,>=4.6.0->sentence-transformers) (3.7.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk->sentence-transformers) (1.15.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=4.6.0->sentence-transformers) (2021.10.8)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=4.6.0->sentence-transformers) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=4.6.0->sentence-transformers) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers<5.0.0,>=4.6.0->sentence-transformers) (2.10)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers<5.0.0,>=4.6.0->sentence-transformers) (1.1.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers<5.0.0,>=4.6.0->sentence-transformers) (7.1.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->sentence-transformers) (3.1.0)\n","Requirement already satisfied: pillow!=8.3.0,>=5.3.0 in /usr/local/lib/python3.7/dist-packages (from torchvision->sentence-transformers) (7.1.2)\n","Building wheels for collected packages: sentence-transformers\n","  Building wheel for sentence-transformers (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sentence-transformers: filename=sentence_transformers-2.2.0-py3-none-any.whl size=120747 sha256=b4a92fbfefa907f2def454926402f65a3c9c6ce111b9856f85c3c48201e6f319\n","  Stored in directory: /root/.cache/pip/wheels/83/c0/df/b6873ab7aac3f2465aa9144b6b4c41c4391cfecc027c8b07e7\n","Successfully built sentence-transformers\n","Installing collected packages: pyyaml, tokenizers, sacremoses, huggingface-hub, transformers, sentencepiece, sentence-transformers\n","  Attempting uninstall: pyyaml\n","    Found existing installation: PyYAML 3.13\n","    Uninstalling PyYAML-3.13:\n","      Successfully uninstalled PyYAML-3.13\n","Successfully installed huggingface-hub-0.5.1 pyyaml-6.0 sacremoses-0.0.49 sentence-transformers-2.2.0 sentencepiece-0.1.96 tokenizers-0.11.6 transformers-4.18.0\n"]}]},{"cell_type":"code","source":["from sentence_transformers import SentenceTransformer\n","model = SentenceTransformer('paraphrase-MiniLM-L6-v2')\n","\n"],"metadata":{"id":"GiCV-Usb5Hel"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Sentences are encoded by calling model.encode()\n","embeddings = model.encode(test_data_texts[1:3])\n","\n","#Print the embeddings\n","for sentence, embedding in zip(test_data_texts[1:3], embeddings):\n","    print(\"Sentence:\", sentence)\n","    print(\"Embedding:\", embedding)\n","    print(\"\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bqir2wh-MYiG","executionInfo":{"status":"ok","timestamp":1649810881310,"user_tz":240,"elapsed":274,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"3c4c6247-1322-4c09-a390-a4e703b4f676"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sentence: In order to replicate this experiment, you would need to know how many ml of vinegar they used, how much distilled water to rinse the samples with and how they obtained the mass of each sample.\n","Embedding: [-8.29397514e-02  1.91403236e-02  7.07308250e-03  9.04935002e-02\n"," -2.04137102e-01  2.94338405e-01  2.40631968e-01 -6.62582694e-03\n"," -2.77539819e-01 -3.77477437e-01  2.01982200e-01  1.86826363e-02\n","  2.78510779e-01 -4.95010652e-02 -3.58381182e-01  1.37637556e-01\n"," -1.97491258e-01 -4.89892140e-02 -8.72139215e-01  6.26415685e-02\n"," -9.40437708e-03 -9.29189995e-02  9.58837569e-02  1.64353848e-01\n","  1.25774965e-01  5.69105148e-02 -1.42721891e-01  4.55397516e-02\n"," -5.29382452e-02  3.53345186e-01  1.28936470e-01  1.07173592e-01\n"," -1.74748898e-01 -8.77921879e-02  2.10668311e-01 -2.32764766e-01\n"," -1.43638194e-01 -1.23154037e-01  3.27973627e-02  2.18315408e-01\n","  1.57560825e-01  1.23113304e-01 -2.42323354e-01  8.96951258e-02\n"," -9.22351405e-02 -1.15171202e-01 -1.38474464e-01 -2.81883597e-01\n","  2.58841943e-02 -1.64547432e-02  9.62210149e-02 -6.99624494e-02\n","  1.54780531e-02 -2.35350892e-01  1.25841469e-01 -1.60932750e-01\n","  1.10439062e-01 -2.84402937e-01 -4.64362323e-01  3.11330289e-01\n"," -8.09461717e-03  5.07605495e-03  6.37519434e-02  4.11250889e-02\n"," -4.86667275e-01  1.74833357e-01  3.78862303e-03  2.24515617e-01\n","  9.34670419e-02 -1.59137487e-01 -3.50446016e-01 -2.44943767e-05\n"," -1.74307209e-02 -3.09718728e-01  5.25412755e-03 -1.08669668e-01\n"," -1.91245988e-01  6.32095039e-02 -3.67701501e-01 -3.07357073e-01\n"," -1.90869391e-01 -5.39444201e-02 -4.99626175e-02 -2.66905248e-01\n","  2.15725619e-02  3.72308761e-01 -1.07397912e-02 -2.11515918e-01\n"," -5.53793088e-02  1.29599914e-01  1.35353759e-01  2.08492633e-02\n"," -2.91772336e-01 -4.11883481e-02  4.16101329e-02  1.97301254e-01\n"," -5.89798391e-01 -2.38019988e-01  9.45049822e-01 -1.11214116e-01\n"," -4.51249816e-02 -1.79747880e-01 -3.10327768e-01 -3.98100257e-01\n"," -1.91321865e-01 -3.48640919e-01 -5.72469346e-02  1.40507698e-01\n"," -6.61194995e-02 -8.58329609e-03  2.01499850e-01 -7.27211870e-03\n","  5.25873899e-01  7.00099692e-02  3.36352766e-01 -1.68747768e-01\n","  3.16278338e-01  4.63541923e-03 -2.37358421e-01 -5.95928878e-02\n","  3.17446411e-01  1.26016000e-02  2.34569371e-01 -1.38003111e-01\n"," -5.58458567e-02  1.01897262e-01  1.56001925e-01  8.93064588e-02\n"," -1.73858404e-01 -1.30335614e-01  1.85834169e-01 -1.27080260e-02\n","  8.78786221e-02  2.54083365e-01 -2.70045638e-01  2.22322986e-01\n","  3.67025472e-02 -1.11424543e-01  5.47778845e-01  1.87991247e-01\n"," -2.76736505e-02  2.49062538e-01 -2.45876417e-01 -2.64329463e-01\n","  2.60090083e-01 -5.55643998e-03 -1.48583278e-01 -5.55306338e-02\n"," -1.02947757e-01 -6.99219331e-02  2.93419123e-01 -8.38580802e-02\n","  1.31974161e-01  2.41374061e-01 -4.17007767e-02 -1.45029783e-01\n","  3.46536756e-01  1.38887584e-01  3.52978051e-01 -6.98451400e-02\n"," -3.90300095e-01  3.44057195e-02 -2.79288322e-01  3.07466865e-01\n"," -2.28635445e-01  1.67666212e-01  2.55022556e-01  7.85722211e-02\n","  3.41865271e-01  5.53101338e-02  5.38907409e-01 -2.87371427e-01\n"," -2.64658611e-02 -1.41698509e-01 -4.04534698e-01 -4.62456681e-02\n","  4.32631791e-01 -4.70877402e-02  3.05010766e-01 -2.69717485e-01\n"," -1.30128451e-02  5.30284464e-01  1.08430147e-01  2.01716676e-01\n"," -1.98553898e-03  7.84840137e-02 -6.48527443e-02  3.97692174e-01\n"," -2.99948961e-01  1.13641284e-01 -6.65718094e-02  1.77025393e-01\n","  1.38187960e-01  2.78759032e-01 -1.16505355e-01  5.10120988e-02\n","  9.19842720e-02  1.25205740e-01 -1.20434500e-02  8.01156536e-02\n"," -1.51019946e-01 -1.45985022e-01 -4.18029308e-01  7.44500086e-02\n"," -2.19791643e-02 -1.54630750e-01 -1.06593750e-01  1.34082928e-01\n"," -1.88486762e-02  1.68699354e-01  1.35234967e-01 -5.15690744e-01\n"," -2.59758681e-01 -2.94603761e-02 -5.87485991e-02  5.61554311e-03\n"," -2.41066396e-01  5.47338575e-02  4.78014685e-02 -1.42465368e-01\n","  9.70463827e-02 -2.09699407e-01  7.05062896e-02  3.86660606e-01\n"," -9.34231579e-02  1.66209415e-01 -2.66406000e-01  5.14307246e-02\n"," -1.03061981e-02 -5.00993878e-02 -3.16962719e-01  2.54303157e-01\n"," -1.85525402e-01  1.53392449e-01  7.52685741e-02 -1.73277959e-01\n"," -7.76476637e-02 -3.38987471e-03 -4.96078700e-01  2.17058122e-01\n","  2.79295623e-01  1.55871153e-01  6.37271479e-02  1.74109831e-01\n"," -4.17268574e-01  3.07093203e-01  6.16498530e-01  5.48015833e-02\n","  1.22251436e-01 -6.92035854e-01 -2.36752510e-01 -6.51219308e-01\n","  1.59924835e-01 -3.56023192e-01  2.23956332e-01 -1.34190112e-01\n","  2.31416225e-01 -1.61555871e-01 -2.95419425e-01 -1.83306441e-01\n","  3.77158850e-01  1.33243978e-01  2.02115342e-01  9.10320953e-02\n","  2.34200865e-01  2.71332660e-03 -3.57075557e-02 -2.77956843e-01\n"," -9.87793412e-03  4.02919263e-01 -1.15537956e-01 -3.91512692e-01\n"," -1.82878748e-01  3.15914184e-01  3.63867849e-01 -3.41507375e-01\n"," -3.18643600e-01 -1.12407871e-01 -4.31890674e-02  1.03056997e-01\n","  3.99714291e-01 -3.23952399e-02 -5.06619317e-03 -1.54737532e-01\n"," -7.63998227e-03 -1.47014439e-01 -3.79297435e-01 -3.37546319e-01\n"," -2.93061405e-01  1.45038068e-01  3.45802195e-02  4.94863421e-01\n"," -2.70681113e-01 -2.64100522e-01  5.21160699e-02  6.18034780e-01\n","  9.40023959e-01 -8.02382678e-02  2.98671126e-01  4.69162129e-02\n"," -5.11200845e-01 -2.27954090e-01  2.22682673e-02 -2.55188420e-02\n"," -6.61868602e-02 -1.78311571e-01 -1.85677469e-01  1.80514395e-01\n"," -9.48561355e-02 -3.66152190e-02  2.65681237e-01 -1.47445694e-01\n"," -2.64446363e-02  1.13136813e-01  7.83557594e-02 -2.87515372e-01\n","  4.11766842e-02 -3.14637780e-01  1.80941477e-01  3.73472661e-01\n","  2.21399397e-01 -5.91001706e-04  3.61621976e-01  5.78616522e-02\n","  2.59624004e-01  1.79251373e-01  2.03560635e-01  1.88209534e-01\n"," -1.30745724e-01 -1.64699376e-01 -3.57482582e-01  1.63391307e-01\n","  2.45978609e-01  4.11131084e-01 -3.83703828e-01 -1.59532085e-01\n","  9.44354339e-04  9.24719349e-02  7.33905956e-02 -1.22712135e-01\n"," -1.47377402e-01 -1.89852238e-01 -1.04080793e-02  7.24718943e-02\n"," -6.19840957e-02  7.87622258e-02 -1.86798245e-01 -7.79546723e-02\n"," -3.23931724e-01 -3.45554680e-01 -2.25611031e-01 -1.80596001e-02\n"," -1.98330313e-01  7.75968209e-02 -4.64457609e-02  1.27247229e-01\n"," -1.17695101e-01 -2.43776187e-01  2.17290387e-01 -1.28569126e-01\n"," -3.49819094e-01  4.83429711e-03 -5.62168136e-02  7.43262991e-02\n","  2.59587646e-01  8.35890397e-02 -3.57593566e-01 -1.73335135e-01\n"," -1.88979954e-01  2.91330338e-01 -1.73576046e-02  2.25781620e-01\n","  2.84364104e-01  1.66464262e-02  1.30066603e-01  2.81100813e-02\n"," -8.40978173e-04 -6.89905360e-02 -6.21275790e-02  1.94659010e-02\n","  5.39785065e-03 -4.57550725e-03  2.58429080e-01 -4.60780412e-02]\n","\n","Sentence: In order to replicate their experiment, you would need to know how much vinegar you are pouring into each of the containers as well as what kind of samples we are going to measure. It should state specifically marble, limestone, wood and plastic. It should also tell us on what the rocks samples will sit on as different materials may compromise the results. The last thing that would be needed to replicate this experiment is to tell us what kind of containers the samples should be put in such as wooden boxes,glass test tubes,ziploc bags etc.\n","Embedding: [-2.29388103e-01 -4.08886261e-02 -8.34213383e-03  1.08814172e-01\n","  2.40591518e-03 -5.24206320e-04  6.73968270e-02 -2.32964650e-01\n"," -1.69610709e-01 -3.72853577e-01 -3.32804061e-02 -1.01256952e-01\n","  8.83406401e-02  3.47495154e-02 -8.93345550e-02 -6.17429465e-02\n","  9.14723426e-02 -9.22123343e-02 -2.56856978e-01  1.45817593e-01\n","  1.89540520e-01 -1.48439929e-01 -1.24357402e-01  1.42771229e-01\n","  8.89358018e-03  2.49036983e-01  1.26121603e-02 -3.35003659e-02\n","  5.81152597e-03  3.97386216e-03 -3.41651477e-02  5.42351156e-02\n"," -5.35825312e-01 -1.48183629e-01  3.96405965e-01 -9.89682674e-02\n"," -1.13052875e-02 -2.05395192e-01  7.35385716e-02 -3.27459536e-02\n","  1.88522369e-01  1.10612646e-01 -1.72797758e-02 -4.70627891e-03\n"," -1.58558339e-01 -1.85357854e-01  4.64332290e-02 -1.92242518e-01\n"," -3.51311080e-02 -4.31594327e-02 -4.63252813e-02 -6.52637705e-02\n"," -3.79127972e-02 -2.56854653e-01  2.35131588e-02 -2.61316329e-01\n","  8.18903148e-02 -1.09995738e-01 -4.23725426e-01  1.98881165e-03\n"," -7.64140934e-02 -9.45648272e-03  1.20768607e-01  4.40861247e-02\n"," -1.38463527e-01  1.19612589e-01  5.26009724e-02  3.94774467e-01\n","  3.00158769e-01  4.29039169e-03 -2.41948396e-01  2.24610027e-02\n","  2.76736226e-02 -2.52608716e-01  2.22124681e-01  8.26694369e-02\n"," -3.16151008e-02 -2.40248069e-01 -1.93140432e-01 -6.84512481e-02\n"," -2.51166254e-01  5.65030891e-03 -7.24836588e-02 -2.88115125e-02\n","  3.57424989e-02  2.60576457e-01 -8.14118087e-02  8.32181349e-02\n"," -2.35377163e-01  8.06186721e-03  3.18357557e-01  6.65491372e-02\n"," -2.11174637e-01  1.14134990e-01  3.18350978e-02  4.78288293e-01\n"," -2.38762647e-01 -1.72939047e-01  7.53734171e-01 -1.60060190e-02\n","  5.12424521e-02 -1.74495488e-01 -1.43724322e-01 -2.36361519e-01\n"," -2.70468026e-01 -3.46046001e-01 -1.87737674e-01  5.61458059e-02\n","  2.39991397e-01 -7.19585493e-02 -1.00983670e-02  7.05815405e-02\n","  6.66923150e-02 -2.57365545e-03 -1.36891842e-01 -1.94392100e-01\n","  2.30235755e-02 -1.52175918e-01 -9.96950194e-02 -3.60785037e-01\n","  1.56288594e-01 -8.51332210e-03  1.82393596e-01  2.63249222e-02\n","  2.23378867e-01  5.62584326e-02 -1.67071581e-01  1.27982080e-01\n"," -1.12084290e-02  3.77946813e-03  2.34157741e-01  8.35878626e-02\n","  1.32298753e-01  1.88761801e-01  6.91203773e-02  6.51891381e-02\n"," -1.14907280e-01 -1.26294553e-01  2.20604479e-01  1.76706448e-01\n"," -1.58007160e-01  3.32708180e-01 -1.76771879e-02 -1.71465322e-01\n","  7.54384324e-04  8.34581256e-02 -3.37885261e-01  4.11351770e-02\n"," -2.61699408e-01 -2.29867488e-01  1.01798519e-01 -7.04782307e-02\n","  1.21271601e-02  2.93718964e-01 -1.48411160e-02  1.22197442e-01\n"," -1.90904826e-01  6.97710961e-02  3.72590363e-01  2.43370175e-01\n"," -3.23163003e-01  1.76365718e-01 -1.79706380e-01  2.43673727e-01\n"," -3.29394817e-01  1.14780664e-01 -3.52903455e-02 -2.57289976e-01\n","  3.65365237e-01  1.35376155e-01  2.91659385e-01 -3.42025515e-03\n","  1.66101262e-01 -2.45159119e-01 -1.45269826e-01  9.53828022e-02\n","  1.33168861e-01 -2.46257022e-01  1.67252436e-01 -3.00228149e-02\n","  1.76782086e-01  4.10082042e-01  1.84730306e-01  1.59215890e-02\n","  2.57421527e-02 -1.20565102e-01  1.35099841e-02 -8.82196147e-03\n","  8.66052136e-03 -1.01317205e-01 -3.60717960e-02  1.42705396e-01\n","  3.05529118e-01  2.75099128e-01 -1.67536229e-01  2.24209460e-03\n","  3.39888811e-01 -1.44032225e-01 -1.46752059e-01  9.20926630e-02\n"," -1.52339295e-01  1.09074346e-03 -2.45935738e-01 -1.03767430e-02\n"," -2.12661192e-01  1.12494151e-03  9.75142717e-02  2.18387544e-02\n","  4.39946167e-02  2.57598162e-01 -1.76822111e-01 -5.51362932e-01\n"," -3.28894049e-01 -6.88312948e-02 -5.06924652e-02 -1.39068998e-02\n"," -3.68381590e-02  2.29722653e-02 -3.23392302e-01 -2.68070936e-01\n","  3.51204053e-02 -1.99725181e-01  1.08557232e-01  2.27837741e-01\n"," -1.06718324e-01  1.98490813e-01  2.07454413e-01 -1.40567258e-01\n","  7.30865225e-02 -2.38069966e-01 -3.47496867e-02  4.85299043e-02\n","  1.90085024e-01  3.75681549e-01 -1.01619661e-01 -1.35707587e-01\n","  1.27889723e-01 -1.31243557e-01 -3.00547838e-01  2.56225169e-01\n","  8.49545896e-02 -1.01024747e-01  3.10487658e-01 -2.72924453e-02\n"," -3.95649612e-01  4.96020645e-01  1.87337250e-01  4.58617583e-02\n"," -9.20437500e-02 -4.31399465e-01 -2.13997886e-01 -7.26665080e-01\n","  1.89610898e-01 -2.25813225e-01  5.03492691e-02 -6.68842271e-02\n","  6.95548207e-02 -2.23835215e-01 -2.58841932e-01 -1.83334976e-01\n","  6.32025421e-01 -9.57753137e-02  1.59372702e-01 -9.92662087e-02\n","  3.91544104e-01  6.77418560e-02 -8.90436843e-02  3.82918455e-02\n"," -5.48753105e-02  1.72817662e-01  1.20165937e-01 -1.83982357e-01\n"," -1.24306738e-01  1.23380318e-01  2.81190276e-01 -2.17637017e-01\n"," -2.44819909e-01 -3.44572991e-01  1.97020784e-01  3.71547610e-01\n","  1.98248386e-01 -1.37482911e-01 -3.21899503e-02  3.04538071e-01\n","  3.09097152e-02 -4.56926413e-02 -1.41498312e-01 -3.66762042e-01\n"," -1.20060466e-01  1.06871881e-01  6.45404235e-02  4.07081753e-01\n"," -1.97593227e-01 -2.16102928e-01  5.11825494e-02  2.83623248e-01\n","  6.82134807e-01  5.06857503e-03  3.11713815e-01 -1.19747221e-01\n"," -2.57907718e-01  1.85422804e-02  3.06002516e-03  5.32607920e-02\n"," -2.27757260e-01  1.52903469e-02 -3.02960537e-02  3.19852352e-01\n","  2.17605278e-01 -5.70555180e-02  2.86174089e-01 -1.40589878e-01\n"," -1.48233071e-01  1.84394613e-01 -1.30818680e-01 -9.92650613e-02\n"," -2.29366533e-02  2.72973955e-01  1.13959812e-01  4.84822601e-01\n","  2.26400390e-01 -1.04394138e-01  1.20340809e-02 -6.97959438e-02\n"," -2.01329544e-01 -8.44190791e-02  6.73877075e-02 -3.30686271e-02\n"," -2.42693275e-02 -1.68443531e-01 -4.13843989e-01  6.03993982e-02\n","  2.36634448e-01  2.12740034e-01 -2.35183790e-01 -1.91092476e-01\n","  7.63353556e-02  1.32341519e-01 -1.11006387e-01 -2.04018235e-01\n"," -5.87953329e-02 -1.82044402e-01  3.07507008e-01  2.16052800e-01\n"," -9.10711810e-02  6.50848970e-02 -4.63922285e-02 -8.43629986e-03\n"," -1.22306138e-01 -1.62688717e-01 -2.07443279e-03  1.42180258e-02\n"," -7.31407255e-02  8.30019936e-02  2.40304902e-01 -2.99170077e-01\n"," -3.42121869e-01 -1.58521771e-01  1.53678000e-01 -2.80338526e-01\n"," -3.27708900e-01 -2.40649909e-01 -2.79473901e-01  6.46601766e-02\n","  3.35290402e-01  2.95252204e-02 -4.42322195e-01 -1.19266167e-01\n"," -1.80319950e-01  4.47938830e-01 -4.93212640e-02  9.37198661e-03\n","  1.57943189e-01 -1.83106929e-01  3.59085888e-01  4.46328595e-02\n","  3.42618227e-01  5.56429140e-02  1.82861060e-01  1.97287664e-01\n","  1.07152546e-02 -1.98320393e-02  1.91753462e-01 -1.40937477e-01]\n","\n"]}]},{"cell_type":"code","source":["#Training sentences we like to encode\n","train_embeddings = model.encode(training_data_texts)\n","\n","#Testing sentences we would like to encode\n","test_embeddings = model.encode(test_data_texts)\n","\n","print(train_embeddings.shape)\n","print(test_embeddings.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KdbEvE2JMKd2","executionInfo":{"status":"ok","timestamp":1649811551772,"user_tz":240,"elapsed":664476,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"6d869f9a-8a88-424b-d406-7847a4b3b5a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(17207, 384)\n","(5224, 384)\n"]}]},{"cell_type":"markdown","source":["## Classifier Sklearn KNN"],"metadata":{"id":"TObVWjDvFkpi"}},{"cell_type":"code","source":["# import KNN and use n = 5\n","from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=5)"],"metadata":{"id":"8f31o9rxFjEP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Training KNN N=3"],"metadata":{"id":"qMk7BCouVjJD"}},{"cell_type":"code","source":["knn.fit(train_embeddings,training_data_scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ANT4OkvAGJuD","executionInfo":{"status":"ok","timestamp":1649811644489,"user_tz":240,"elapsed":139,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"e6ed3e28-fd8d-41b9-ff63-243bda9bc139"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["### Testing on the test dataset"],"metadata":{"id":"QEjMz1q4V0q7"}},{"cell_type":"code","source":["knn.score(test_embeddings,test_data_scores)\n","# results = knn.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BsPMXry0V5CZ","executionInfo":{"status":"ok","timestamp":1649811652545,"user_tz":240,"elapsed":4456,"user":{"displayName":"Peilan Wang","userId":"06182764513020147358"}},"outputId":"2315aa0a-ef3d-44fc-81f3-7a8a6ca47f48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6316998468606432"]},"metadata":{},"execution_count":55}]}]}